#!/bin/bash

# Create a virtual network using network namespaces and veth pairs
# to connect them.
# Assuming $CONFIGDIR == "cfg":
# * Files in cfg/<Node name> will be overlaid over /etc, i.e. if a file with
# the same name exists in both directory, the one in cfg/<Node name> will
# be the one used.
# * If cfg/<Node name>_$BOOT (defaults to cfg/<Node name>_boot) exists and
# is executable, it will be executed when the node is created
# * If cfg/<Node name>_$STARTUP (defaults to cfg/<Node name>_start) exists and
# is executable, it will be executed when the whole network has started
#

# IMPORTANT NOTE: Node names MUST NOT exceed 9 characters.
# This is due to the limitation to 14 characters of interface names

# You can override any of these settings on a per-topology basis
# Group number
GROUPNUMBER=2
# Node configs
CONFIGDIR=myNetwork_cfg
# boot script name
BOOT="boot"
# startup script name
STARTUP="start"
PREFIXBASE="fde4:2"
PREFIXLEN=32
# You can reuse the above two to generate ip addresses/routes, ...
# e.g. "fde4:2:1234::/48"

# This function describes the network topology that we want to emulate
function mk_topo {
    echo "@@ Adding links and nodes"
    # Build a small network R0 - R1 - R2
    # Nodes are creadted on the fly, and their interface are assigned as
    # <node name>-eth<count>, where count starts at 0 and is increased by 1
    # after each new interface
    # e.g. R1-eth0 links to R2-eth0
    # R1-eth1 links to R3-eth0
    add_link R13 R1
    add_link R13 R2
    add_link R1 R2
    add_link R1 R3
    add_link R2 R4
    add_link R3 R4
    add_link R3 R5
    add_link R3 R7
    add_link R4 R5
    add_link R4 R6
    add_link R5 R6
    add_link R5 R7
    add_link R5 R8
    add_link R6 R8
    add_link R7 R8
    add_link R7 R9
    add_link R8 R9
    add_link R9 R10
    add_link R9 R11
    add_link R10 R11
    add_link R10 R12
    add_link R11 R12

    #echo "@@ Adding LANs"
    # Create a new LAN (subnet), attached to R0, with 2 hosts: B1 and B2
    #mk_LAN R1 D1
    # Same but with 4 hosts in LLN
    #mk_LAN R2 D2

    #echo "@@ Briding the network"
    # Connect BELNET to its two connectivity providers
    #bridge_node BELNET eth5 grp2
    #bridge_node BELNET eth2 as300
}
